<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true">Combinatorial And (Spatial Analyst)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para>Performs a Combinatorial And operation on the cell values of two input rasters.</para>
			<para>If both input values are true (non-zero), the output is a different value for each unique combination of input values. If one or both inputs are false (zero), the output value is 0.</para>
			
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword>Combine</keyword><keyword>False</keyword><keyword>Math</keyword><keyword>True</keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name="CombinatorialAnd" displayname="Combinatorial And (Spatial Analyst)" toolboxalias="sa" softwarerestriction="none"><summary>
			<para>Performs a Combinatorial And operation on the cell values of two input rasters.</para>
			<para>If both input values are true (non-zero), the output is a different value for each unique combination of input values. If one or both inputs are false (zero), the output value is 0.</para>
			
		</summary><alink_name>CombinatorialAnd_sa</alink_name><toolIllust type="illustration" src="CombinatorialAnd_sa_h.png" alt="Combinatorial And illustration" /><parameters><param sync="true" name="in_raster_or_constant1" displayname="Input raster or constant value 1" datatype="Raster Layer | Constant" direction="Input" expression="in_raster_or_constant1" type="Required"><pythonReference><para>The first input to use in this combinatorial operation.</para><para>It must be of positive integer type.</para><para>A number can be used as an input for this parameter, provided a raster is specified for the other parameter. To be able to specify a number for both inputs, the cell size and extent must first be set in the environment.</para>
					</pythonReference><dialogReference><para>The first input to use in this combinatorial operation.</para><para>It must be of positive integer type.</para><para>A number can be used as an input for this parameter, provided a raster is specified for the other parameter. To be able to specify a number for both inputs, the cell size and extent must first be set in the environment.</para>
					</dialogReference></param><param sync="true" name="in_raster_or_constant2" displayname="Input raster or constant value 2" datatype="Raster Layer | Constant" direction="Input" expression="in_raster_or_constant2" type="Required"><pythonReference><para>The second input to use in this combinatorial operation.</para><para>It must be of positive integer type.</para><para>A number can be used as an input for this parameter, provided a raster is specified for the other parameter. To be able to specify a number for both inputs, the cell size and extent must first be set in the environment.</para>
					</pythonReference><dialogReference><para>The second input to use in this combinatorial operation.</para><para>It must be of positive integer type.</para><para>A number can be used as an input for this parameter, provided a raster is specified for the other parameter. To be able to specify a number for both inputs, the cell size and extent must first be set in the environment.</para>
					</dialogReference></param><param sync="true" name="out_raster" displayname="Output raster" datatype="Raster" direction="Output" expression="out_raster" type="Required"><pythonReference>
							<para>The output raster.</para>
						</pythonReference><dialogReference>
							<para>The output raster.</para>
						</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Cell_size" label="Cell size">
						
					</environment><environment name="Current_workspace" label="Current workspace">
						
					</environment><environment name="Mask" label="Mask">
						
					</environment><environment name="Output_coordinate_system" label="Output coordinate system">
						
					</environment><environment name="Output_extent" label="Output extent">
						
					</environment><environment name="Scratch_workspace" label="Scratch workspace">
						
					</environment><environment name="Snap_raster" label="Snap raster">
						
					</environment></environments><usage><bullet_item><para>The Combinatorial math tools interpret the inputs as Boolean values, where non-zero values are considered true, and zero values are considered false.</para></bullet_item><bullet_item><para>Two inputs are necessary for this Combinatorial evaluation to take place.</para></bullet_item><bullet_item><para>The order of inputs for this tool is only relevant for the output attribute table.</para></bullet_item></usage><scriptExamples><scriptExample><title>CombinatorialAnd example 1 (Python window)</title>
					<para>This example performs a Combinatorial And operation on two GRID rasters and outputs the result as a TIFF raster.</para>
				<code xml:space="preserve">import arcpy
from arcpy import env
from arcpy.sa import *
env.workspace = "C:/sapyexamples/data"
outCAnd = CombinatorialAnd("degs", "cost")
outCAnd.save("C:/sapyexamples/output/outcand.tif")
                    </code></scriptExample><scriptExample><title>CombinatorialAnd example 2 (stand-alone script)</title>
					<para>This example performs a Combinatorial And operation on two GRID rasters.</para>
				<code xml:space="preserve"># Name: CombinatorialAnd_Ex_02.py
# Description: Performs a Combinatorial And operation on the cell
#              values of two input rasters
# Requirements: Spatial Analyst Extension
# Author: ESRI

# Import system modules
import arcpy
from arcpy import env
from arcpy.sa import *

# Set environment settings
env.workspace = "C:/sapyexamples/data"

# Set local variables
inRaster1 = "degs"
inRaster2 = "cost"

# Check out the ArcGIS Spatial Analyst extension license
arcpy.CheckOutExtension("Spatial")

# Execute CombinatorialAnd
outCAnd = CombinatorialAnd(inRaster1, inRaster2)

# Save the output 
outCAnd.save("C:/sapyexamples/output/outcand")
                    </code></scriptExample></scriptExamples></tool></metadata>