<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true">Overlay Route Events (Linear Referencing)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para>Overlays two event tables to create an output event table that represents the union or intersection of the input.</para>
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword>Analyze</keyword><keyword>Event</keyword><keyword>Events</keyword><keyword>Intersect</keyword><keyword>Lay Over</keyword><keyword>Line-On-Line</keyword><keyword>Line-On-Point</keyword><keyword>Overlie</keyword><keyword>Place On Top</keyword><keyword>Place Over</keyword><keyword>Point-On-Point</keyword><keyword>Route</keyword><keyword>Route Events</keyword><keyword>Superimpose</keyword><keyword>Union</keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name="OverlayRouteEvents" displayname="Overlay Route Events (Linear Referencing)" toolboxalias="lr" softwarerestriction="none"><summary>
			<para>Overlays two event tables to create an output event table that represents the union or intersection of the input.</para>
		</summary><alink_name>OverlayRouteEvents_lr</alink_name><parameters><param sync="true" name="in_table" displayname="Input Event Table" datatype="Table View" direction="Input" expression="in_table" type="Required"><pythonReference>
						<para>The input event table.</para>
					</pythonReference><dialogReference>
						<para>The input event table.</para>
					</dialogReference></param><param sync="true" name="in_event_properties" displayname="Input Event Table Properties" datatype="Route Measure Event Properties" direction="Input" expression="in_event_properties" type="Required"><pythonReference>
						<para>Parameter consisting of the route location fields and the type of events in the input event table.</para>
						<bulletList>
							<bullet_item>Route Identifier Field—The field containing values that indicate which route each event is along. This field can be numeric or character.</bullet_item>
							<bullet_item>Event Type—The type of events in the input event table (POINT or LINE).<bulletList>
									<bullet_item>POINT—Point events occur at a precise location along a route. Only a from-measure field must be specified.</bullet_item>
									<bullet_item>LINE—Line events define a portion of a route. Both from- and to-measure fields must be specified.</bullet_item>
								</bulletList></bullet_item>
							<bullet_item>From-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is POINT or LINE. Note, when the Event Type is POINT the label for this parameter becomes "Measure Field".</bullet_item>
							<bullet_item>To-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is LINE.</bullet_item>
						</bulletList>
					</pythonReference><dialogReference>
						<para>Parameter consisting of the route location fields and the type of events in the input event table.</para>
						<bulletList>
							<bullet_item>Route Identifier Field—The field containing values that indicate which route each event is along. This field can be numeric or character.</bullet_item>
							<bullet_item>Event Type—The type of events in the input event table (POINT or LINE).<bulletList>
									<bullet_item>POINT—Point events occur at a precise location along a route. Only a from-measure field must be specified.</bullet_item>
									<bullet_item>LINE—Line events define a portion of a route. Both from- and to-measure fields must be specified.</bullet_item>
								</bulletList></bullet_item>
							<bullet_item>From-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is POINT or LINE. Note, when the Event Type is POINT the label for this parameter becomes "Measure Field".</bullet_item>
							<bullet_item>To-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is LINE.</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="overlay_table" displayname="Overlay Event Table" datatype="Table View" direction="Input" expression="overlay_table" type="Required"><pythonReference>
						<para>The overlay event table.</para>
					</pythonReference><dialogReference>
						<para>The overlay event table.</para>
					</dialogReference></param><param sync="true" name="overlay_event_properties" displayname="Overlay Event Table Properties" datatype="Route Measure Event Properties" direction="Input" expression="overlay_event_properties" type="Required"><pythonReference>
						<para>Parameter consisting of the route location fields and the type of events in the overlay event table.</para>
						<para>Route Identifier Field—The field containing values that indicate which route each event is along. This field can be numeric or character.</para>
						<para>Event Type—The type of events in the overlay event table (POINT or LINE).</para>
						<bulletList>
							<bullet_item>POINT—Point events occur at a precise location along a route. Only a from-measure field must be specified.</bullet_item>
							<bullet_item>LINE—Line events define a portion of a route. Both from- and to-measure fields must be specified.</bullet_item>
						</bulletList>
						<para>From-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is POINT or LINE. Note when the Event Type is POINT the label for this parameter becomes "Measure Field".</para>
						<para>To-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is LINE.</para>
					</pythonReference><dialogReference>
						<para>Parameter consisting of the route location fields and the type of events in the overlay event table.</para>
						<para>Route Identifier Field—The field containing values that indicate which route each event is along. This field can be numeric or character.</para>
						<para>Event Type—The type of events in the overlay event table (POINT or LINE).</para>
						<bulletList>
							<bullet_item>POINT—Point events occur at a precise location along a route. Only a from-measure field must be specified.</bullet_item>
							<bullet_item>LINE—Line events define a portion of a route. Both from- and to-measure fields must be specified.</bullet_item>
						</bulletList>
						<para>From-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is POINT or LINE. Note when the Event Type is POINT the label for this parameter becomes "Measure Field".</para>
						<para>To-Measure Field—A field containing measure values. This field must be numeric and is required when the event type is LINE.</para>
					</dialogReference></param><param sync="true" name="overlay_type" displayname="Type of Overlay" datatype="String" direction="Input" expression="overlay_type" type="Required"><pythonReference>
						<para>The type of overlay to be performed.</para>
						<bulletList><bullet_item>INTERSECT—Writes only overlapping events to the output event table. This is the default. </bullet_item><bullet_item>UNION—Writes all events to the output table. Linear events are split at their intersections. </bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>The type of overlay to be performed.</para>
						<bulletList><bullet_item>INTERSECT—Writes only overlapping events to the output event table. This is the default. </bullet_item><bullet_item>UNION—Writes all events to the output table. Linear events are split at their intersections. </bullet_item></bulletList>
					</dialogReference></param><param sync="true" name="out_table" displayname="Output Event Table" datatype="Table" direction="Output" expression="out_table" type="Required"><pythonReference>
						<para>The table to be created.</para>
					</pythonReference><dialogReference>
						<para>The table to be created.</para>
					</dialogReference></param><param sync="true" name="out_event_properties" displayname="Output Event Table Properties" datatype="Route Measure Event Properties" direction="Output" expression="out_event_properties" type="Required"><pythonReference>
						<para>Parameter consisting of the route location fields and the type of events that will be written to the output event table.</para>
						<bulletList><bullet_item>Route Identifier Field—The field that will contain values that indicate which route each event is along.</bullet_item><bullet_item>Event Type—The type of events the output event table will contain (POINT or LINE).<bulletList>
									<bullet_item>POINT—Point events occur at a precise location along a route. Only a single measure field must be specified.</bullet_item>
									<bullet_item>LINE—Line events define a portion of a route. Both from- and to-measure fields must be specified.</bullet_item>
								</bulletList></bullet_item><bullet_item>From-Measure Field—A field that will contain measure values. Required when the event type is POINT or LINE. Note when the Event Type is POINT the label for this parameter becomes "Measure Field".</bullet_item><bullet_item>To-Measure Field—A field that will contain measure values. Required when the event type is LINE.</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Parameter consisting of the route location fields and the type of events that will be written to the output event table.</para>
						<bulletList><bullet_item>Route Identifier Field—The field that will contain values that indicate which route each event is along.</bullet_item><bullet_item>Event Type—The type of events the output event table will contain (POINT or LINE).<bulletList>
									<bullet_item>POINT—Point events occur at a precise location along a route. Only a single measure field must be specified.</bullet_item>
									<bullet_item>LINE—Line events define a portion of a route. Both from- and to-measure fields must be specified.</bullet_item>
								</bulletList></bullet_item><bullet_item>From-Measure Field—A field that will contain measure values. Required when the event type is POINT or LINE. Note when the Event Type is POINT the label for this parameter becomes "Measure Field".</bullet_item><bullet_item>To-Measure Field—A field that will contain measure values. Required when the event type is LINE.</bullet_item></bulletList>
					</dialogReference></param><param sync="true" name="zero_length_events" displayname="Keep zero length line events" datatype="Boolean" direction="Input" expression="zero_length_events" type="Optional"><pythonReference>
						<para>Specifies whether to keep zero length line events in the output table. This parameter is only valid when the output event type is LINE.</para>
						<bulletList><bullet_item>ZERO—Keeps zero length line events. This is the default. </bullet_item><bullet_item>NO_ZERO—Does not keep zero length line events. </bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Specifies whether to keep zero length line events in the output table. This parameter is only valid when the output event type is LINE.</para>
						<bulletList>
							<bullet_item>Checked—Keep zero length line events. This is the default. </bullet_item>
							<bullet_item>Unchecked—Do not keep zero length line events. </bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="in_fields" displayname="Include all fields from input" datatype="Boolean" direction="Input" expression="in_fields" type="Optional"><pythonReference>
						<para>Specifies whether all the fields from the input and overlay event tables will be written to the output event table.</para>
						<bulletList><bullet_item>FIELDS—Includes all the fields from the input tables in the output table. This is the default. </bullet_item><bullet_item>NO_FIELDS—Does not include all the fields from the input tables in the output table. Only the ObjectID and the route location fields are kept. </bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Specifies whether all the fields from the input and overlay event tables will be written to the output event table.</para>
						<bulletList>
							<bullet_item>Checked—Includes all the fields from the input tables in the output table. This is the default.</bullet_item>
							<bullet_item>Unchecked—Does not include all the fields from the input tables in the output table. Only the ObjectID and the route location fields are kept.</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="build_index" displayname="Build index" datatype="Boolean" direction="Input" expression="build_index" type="Optional"><pythonReference>
						<para>Specifies whether an attribute index will be created for the route identifier field that is written to the output event table.</para>
						<bulletList><bullet_item>INDEX—Creates an attribute index. This is the default. </bullet_item><bullet_item>NO_INDEX—Does not create an attribute index. </bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Specifies whether an attribute index will be created for the route identifier field that is written to the output event table.</para>
						<bulletList>
							<bullet_item>Checked—Creates an attribute index. This is the default. </bullet_item>
							<bullet_item>Unchecked—Does not create an attribute index. </bullet_item>
						</bulletList>
					</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Current_workspace" label="Current workspace">
						
					</environment><environment name="Output_Config_Keyword" label="Output Config Keyword">
						
					</environment><environment name="Scratch_workspace" label="Scratch workspace">
						
					</environment></environments><usage><bullet_item>
				<para>Line-on-line, line-on-point, point-on-line, and point-on-point event overlays can be performed.</para>
			</bullet_item><bullet_item>
				<para>The input and overlay events should be based on the same route reference.</para>
			</bullet_item><bullet_item>
				<para>The input tables can be any type of table that ArcGIS supports. The output table can be a dBASE file or a geodatabase table.</para>
			</bullet_item><bullet_item>
				<para>The output table can be displayed in ArcMap using the  tool or using the .</para>
			</bullet_item><bullet_item>
				<para>If both the input and overlay event properties are type POINT, the output event properties must also be defined as type POINT.</para>
			</bullet_item><bullet_item>
				<para>If both the input and overlay event properties are type LINE, the output event properties must also be defined as type LINE.</para>
			</bullet_item><bullet_item>
				<para>If either the input or overlay event properties are type POINT, the output event properties must be defined as type POINT when an INTERSECT overlay is performed. The output event properties must be defined as type LINE when a UNION overlay is performed.</para>
			</bullet_item><bullet_item>
				<para>If both the input and overlay event properties are type POINT, only the points that have the exact same measure value are considered to intersect. There is no search tolerance.</para>
			</bullet_item><bullet_item>
				<para>An attribute index on the route identifier field speeds up the dynamic segmentation process. If you will be using the Output Event Table for , it is recommended that you choose to have an attribute index created.</para>
			</bullet_item><bullet_item>
				<para>Use the  tool prior to this tool to effectively reduce the number of events that will be processed.</para>
			</bullet_item><bullet_item>
				<para>If either the input or overlay events do not have an ObjectID field, use the  tool prior to this tool to add a virtual ObjectID field.</para>
			</bullet_item></usage><scriptExamples><scriptExample><title>OverlayRouteEvents Example (Python Window)</title><code xml:space="preserve">
import arcpy
from arcpy import env

env.workspace = "C:/Data"
arcpy.OverlayRouteEvents_lr ("accident.dbf", "rkey POINT mile" , "pavecond.dbf", "rkey LINE fmp tmp", "INTERSECT", \
                              "accpav", "rkey POINT mile" )
 

                    </code></scriptExample><scriptExample><title>OverlayRouteEvents Example (Stand-alone Python Script)</title>
					<para>The following Python script demonstrates how to use the OverlayRouteEvents function in a stand-alone Python script.</para>
				<code xml:space="preserve"># NAme: OverlayRouteEvents_Example.py
# Description: Point-on-line INTERSECT overlay (both tables are dBASE)
# Author: ESRI

# Import system modules 
import arcpy
from arcpy import env

# Set workspace
env.workspace = "C:/Data"

# Set local variables
in_tbl = "accident.dbf"
in_props = "rkey POINT mile"        # reused as out event properties
ov_tbl = "pavecond.dbf"
ov_props = "rkey LINE fmp tmp"
out_tbl = "accpav"

# Execute OverlayRouteEvents
arcpy.OverlayRouteEvents_lr (in_tbl, in_props, ov_tbl, ov_props, "INTERSECT", \
                              out_tbl, in_props)


                    </code></scriptExample><scriptExample><title>OverlayRouteEvents Example 2 (Stand-alone Python Script)</title>
					<para>The following Python script demonstrates how to use the OverlayRouteEvents function in a stand-alone Python script using file geodatabase data.</para>
				<code xml:space="preserve"># Name OverlayRouteEvents_Example2.py
# Description: Line-on-line UNION overlay (both tables are in a file geodatabase)
# Author: ESRI

# Import system modules
import arcpy
from arcpy import env

# Set workspace
env.workspace = "C:/Data/Pitt.gdb"

# Set local variables
in_tbl = "pavecond"
in_props = "rkey LINE fmp tmp"     # reused as overlay and out event properties
ov_tbl = "pavetype"
out_tbl = "condtype" 

# Execute OverlayRouteEvents
arcpy.OverlayRouteEvents_lr (in_tbl, in_props, ov_tbl, in_props, "UNION", \
                              out_tbl, in_props, "NO_ZERO")

 

                    </code></scriptExample><scriptExample><title>OverlayRouteEvents Example 3 (Stand-alone Python Script)</title>
					<para>The following Python script demonstrates how to use the OverlayRouteEvents function in a stand-alone Python script using personal geodatabase data.</para>
				<code xml:space="preserve"># Name: OverlayRouteEvents_Example3.py
# Description: Line-on-line UNION overlay (both tables are in a personal geodatabase)
# Author: ESRI

# Import system modules
import arcpy
from arcpy import env

# Set workspace
env.workspace = "C:/Data/Pitt.mdb"

# Set local variables
in_tbl = "pavecond"
in_props = "rkey LINE fmp tmp"     # reused as overlay and out event properties
ov_tbl = "pavetype"
out_tbl = "condtype" 

# Execute OverlayRouteEvents
arcpy.OverlayRouteEvents_lr (in_tbl, in_props, ov_tbl, in_props, "UNION", \
                              out_tbl, in_props, "NO_ZERO")
 

                    </code></scriptExample><scriptExample><title>OverlayRouteEvents Example 4 (Stand-alone Python Script)</title>
					<para>The following Python script demonstrates how to use the OverlayRouteEvents function in a stand-alone Python script using SDE data.</para>
				<code xml:space="preserve"># Name: OverlayRouteEvents_Example4.py
# Description:  Point-on-line INTERSECT overlay (both tables are in enterprise geodatabase)

# Import system modules 
import arcoy
from arcpy import env

# Set workspace
env.workspace = "Database Connections/Connection to Jerry.sde"

# Set local variables
in_tbl = gp.QualifyTableName("accident", wkspc)
in_props = "rkey POINT mile"  
ov_tbl = gp.QualifyTableName("pavecond", wkspc) 
ov_props = "rkey LINE fmp tmp"
out_tbl = "accpav"
out_props = "routekey POINT milepost"     # names are changed for out table

# Execute OverlayRouteEvents
arcpy.OverlayRouteEvents_lr (in_tbl, in_props, ov_tbl, ov_props, "INTERSECT", \
                              out_tbl, out_props)

                    </code></scriptExample></scriptExamples></tool></metadata>