<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true">XSLT Transformation (Conversion)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para>Uses the .NET 3.5 XML software to transform an ArcGIS item's metadata or any XML file using an XSLT 1.0 stylesheet and save the result to an XML file.</para>
			
			<para>XSLT stylesheets can be used to perform a variety of modifications to ArcGIS metadata or an XML file. Several XSLT stylesheets are provided with ArcGIS. Some transform metadata into HTML pages for display. Others are used by the metadata model geoprocessing tools to perform portions of the importing, exporting, and upgrading metadata processes, or can be used to perform well-known metadata tasks. They can be found in the &lt;ArcGIS Install Location&gt;\Metadata\Stylesheets folder.</para>
			<para>You can create your own XSLT stylesheets to perform tasks using the provided stylesheets as examples. For example, you might write a stylesheet to: </para>
			<bulletList>
				<bullet_item>update addresses or phone numbers. Create a model that runs this process then uses the Metadata Importer tool to save the updated metadata to the original ArcGIS item. </bullet_item>
				<bullet_item>remove information that you do not want publicly available before exporting or publishing the metadata. Create a model that runs this process before running the Export Metadata or Metadata Publisher tools.</bullet_item>
				<bullet_item>create an HTML page to display information about an ArcGIS item as part of a Web site. Use the ArcGIS.xsl stylesheet used to display metadata in ArcGIS or write your own.</bullet_item>
			</bulletList>
			<para>XSLT stylesheets that modify ArcGIS metadata should not remove information in the Esri and Binary metadata elements except if the output XML will be used outside of ArcGIS. </para>
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword>Change</keyword><keyword>Convert</keyword><keyword>Export</keyword><keyword>Extensible</keyword><keyword>Format</keyword><keyword>Import</keyword><keyword>Language</keyword><keyword>Make</keyword><keyword>Parse</keyword><keyword>Standard</keyword><keyword>Style</keyword><keyword>Stylesheet</keyword><keyword>Transfer</keyword><keyword>Transformations</keyword><keyword>Translate</keyword><keyword>Turn</keyword><keyword>Xml</keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name="XSLTransform" displayname="XSLT Transformation (Conversion)" toolboxalias="conversion" softwarerestriction="none"><summary>
			<para>Uses the .NET 3.5 XML software to transform an ArcGIS item's metadata or any XML file using an XSLT 1.0 stylesheet and save the result to an XML file.</para>
			
			<para>XSLT stylesheets can be used to perform a variety of modifications to ArcGIS metadata or an XML file. Several XSLT stylesheets are provided with ArcGIS. Some transform metadata into HTML pages for display. Others are used by the metadata model geoprocessing tools to perform portions of the importing, exporting, and upgrading metadata processes, or can be used to perform well-known metadata tasks. They can be found in the &lt;ArcGIS Install Location&gt;\Metadata\Stylesheets folder.</para>
			<para>You can create your own XSLT stylesheets to perform tasks using the provided stylesheets as examples. For example, you might write a stylesheet to: </para>
			<bulletList>
				<bullet_item>update addresses or phone numbers. Create a model that runs this process then uses the Metadata Importer tool to save the updated metadata to the original ArcGIS item. </bullet_item>
				<bullet_item>remove information that you do not want publicly available before exporting or publishing the metadata. Create a model that runs this process before running the Export Metadata or Metadata Publisher tools.</bullet_item>
				<bullet_item>create an HTML page to display information about an ArcGIS item as part of a Web site. Use the ArcGIS.xsl stylesheet used to display metadata in ArcGIS or write your own.</bullet_item>
			</bulletList>
			<para>XSLT stylesheets that modify ArcGIS metadata should not remove information in the Esri and Binary metadata elements except if the output XML will be used outside of ArcGIS. </para>
		</summary><alink_name>XSLTransform_conversion</alink_name><parameters><param sync="true" name="source" displayname="Source Metadata" datatype="Data Element; Layer" direction="Input" expression="source" type="Required"><pythonReference>
						<para>The item whose metadata will be converted, or a stand-alone XML file that will be converted.</para>
					</pythonReference><dialogReference>
						<para>The item whose metadata will be converted, or a stand-alone XML file that will be converted.</para>
					</dialogReference></param><param sync="true" name="xslt" displayname="Input XSLT" datatype="File" direction="Input" expression="xslt" type="Required"><pythonReference>
						<para>An W3C-compliant XSLT 1.0 stylesheet file that defines the transformation that will be performed.</para>
					</pythonReference><dialogReference>
						<para>An W3C-compliant XSLT 1.0 stylesheet file that defines the transformation that will be performed.</para>
					</dialogReference></param><param sync="true" name="output" displayname="Output File" datatype="File" direction="Output" expression="output" type="Required"><pythonReference>
						<para>A file that will be created containing the converted metadata. </para>
						<para>The type of file created depends on the output method specified in the XSLT stylesheet. </para>
					</pythonReference><dialogReference>
						<para>A file that will be created containing the converted metadata. </para>
						<para>The type of file created depends on the output method specified in the XSLT stylesheet. </para>
					</dialogReference></param><param sync="true" name="xsltparam" displayname="XSLT Parameter" datatype="File; String" direction="Input" expression="xsltparam" type="Optional"><pythonReference>
						<para>An XML file or string that will be passed to the XSLT stylesheet. </para>
						<para>To capture this parameter in the XSLT stylesheet, add &lt;xsl:param name="gpparam" /&gt; to the top of the XSLT stylesheet after the xsl:output element and before the first xsl:template element. See merge upgraded FGDC with existing.xslt for an example.</para>
					</pythonReference><dialogReference>
						<para>An XML file or string that will be passed to the XSLT stylesheet. </para>
						<para>To capture this parameter in the XSLT stylesheet, add &lt;xsl:param name="gpparam" /&gt; to the top of the XSLT stylesheet after the xsl:output element and before the first xsl:template element. See merge upgraded FGDC with existing.xslt for an example.</para>
					</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Current_workspace" label="Current workspace"></environment></environments><usage><bullet_item>
				<para>The output file produced by an XSLT stylesheet may be formatted as XML, HTML, or text, for example. The default output file name that will be provided by this tool will have a .xml file extension. If the XSLT stylesheet you are using does not produce an XML file you should provide a file name with a more appropriate file extension.</para>
			</bullet_item><bullet_item><para>This tool can't process an ArcGIS item's metadata or a stand-alone metadata XML file using the XSL stylesheets provided with ArcGIS Desktop 9.3.1 and earlier versions because they don't use XSLT 1.0 technology. They use an older technology that is not supported by the .NET 3.5 Framework. These XSL stylesheets also can't  be used with the ArcGIS metadata editor. </para></bullet_item><bullet_item>
				<para>The XSLT Parameter can be used to pass a string or an XML file name to an XSLT stylesheet which can then use it to modify an item's metadata. For example, an XSLT stylesheet could take a phone number passed in as a string and update all phone numbers in the metadata. If an XML file is passed in with this parameter, an XSLT stylesheet can merge the information it contains with the source metadata. </para><para>Refer to the add unique identifier.xslt file provided with ArcGIS for an example of how to pass in a value and merge upgraded FGDC with existing.xslt for an example of merging information in a separate XML file with an ArcGIS item's metadata.</para>
			</bullet_item><bullet_item><para>If you want to create a custom XSLT stylesheet to display or export metadata or XML files in ArcGIS, refer to the Microsoft documentation for the .NET 3.5 Framework for a complete list of the XSLT and XPath elements, functions and syntax that it supports. These are the only functions that can be used with this tool and in the ArcGIS metadata editor.   </para><para>If you want to use your custom stylesheet both inside and outside ArcGIS you will have the best chance of success if you limit yourself to using XSLT 1.0 and XPath 1.0 elements, functions, and syntax. Non-Microsoft applications are unlikely to support any Microsoft-specific functions XSLT and XPath functions. </para></bullet_item><bullet_item><para>XSLT stylesheets that are exclusively used with this geoprocessing tool and the ArcGIS metadata editor can use some custom XSLT functions provided with ArcGIS to improve metadata handling and display. To use these functions the XSLT stylesheet must reference the URI of the ESRI XSLT function namespace http://www.esri.com/metadata/. For example, &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:esri="http://www.esri.com/metadata/"&gt;. </para><para>The ArcGIS XSLT functions must be prefaced by the prefix assigned to the ESRI XSLT function namespace. If the ESRI XSLT function namespace is assigned the prefix esri as in the above example the GuidGen() function would be used like this: &lt;xsl:value-of select="esri:GuidGen()" /&gt;.</para><bulletList><bullet_item>GuidGen()—Returns a new globally unique identifier (GUID) value that does not include braces ({ and }). For example, a GUID can be included in the metadata to uniquely identify the metadata document or the resource it describes. Refer to the add unique identifier.xslt file provided with ArcGIS for an example.</bullet_item><bullet_item>strtoupper()—Changes the input text string to use only capital letters. Refer to the add unique identifier.xslt file provided with ArcGIS for an example. </bullet_item><bullet_item>strtolower()—Changes the input text string to use only lowercase letters.</bullet_item><bullet_item>striphtml()—If an XML element contains escaped HTML, this function will return the text it contains with all HTML markup removed. Refer to the ESRIISO2.xslt file provided with ArcGIS for an example.</bullet_item><bullet_item>decodenodeset()—If an XML element contains escaped XHTML or XML, this function will return a node set that can be used to process the individual elements that were previously escaped. Refer to the ESRIISO2.xslt file provided with ArcGIS for an example.</bullet_item></bulletList></bullet_item><bullet_item>
				<para>The Source Metadata parameter has a complex data type. If you use this tool in a model, create a variable for the Source Metadata parameter in ModelBuilder by right-clicking the tool, pointing to Make VariableFrom ParameterSource Metadata.</para>
			</bullet_item><bullet_item>
				<para>If an ArcGIS item has metadata that was created in ArcGIS Desktop 9.3.1 or earlier using the FGDC metadata editor and the item's metadata has been upgraded to ArcGIS metadata, the ArcGIS metadata will continue to include the original FGDC metadata XML elements. The metadata will also include other ArcGIS metadata elements. </para><para>You can export the original FGDC metadata elements using this tool with the _MPXML2.xsl file provided with ArcGIS. In the example above this file would only export the item's original FGDC metadata—the information displayed in the FGDC metadata section in the Description tab. The FGDC elements will be ordered correctly in the output XML file.</para><para>The exported file can be published to a metadata catalog that requires information to be provided in the FGDC CSDGM metadata XML format. The exported file can be validated with the FGDC XML Schema or DTD, or the USGS metadata utility known as mp. The  performs this operation internally before processing the metadata.</para>
				</bullet_item><bullet_item>
				<para>Metadata that is published to an external Website in HTML format will be indexed by Internet search engines such as Google if the Web site exposes its content correctly.</para>
			</bullet_item></usage><scriptExamples><scriptExample><title>Export metadata to an HTML file</title>
					<para>Uses the ArcGIS.xsl XSLT stylesheet provided with ArcGIS to export metadata to an HTML file for use in a Web site.</para>
				<code xml:space="preserve">import arcpy
from arcpy import env
env.workspace = "C:/data"
#set local variables
dir = arcpy.GetInstallInfo("desktop")["InstallDir"]
xslt = dir + "Metadata/Stylesheets/ArcGIS.xsl"
arcpy.XSLTransform_conversion("vegetation", xslt, "vegetation.html", "#")
                    </code></scriptExample></scriptExamples></tool></metadata>