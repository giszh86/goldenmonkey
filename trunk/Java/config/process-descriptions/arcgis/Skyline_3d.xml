<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true"> Skyline  (3D Analyst)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para> Generates a line or multipatch feature class containing the results from a skyline silhouette analysis. The analysis is conducted from observer points above a functional or virtual surface and will also consider features that are encountered during the analysis.  When used in conjunction with other tools, especially the Skyline Barrier tool, shadow volumes and other such features can be created.</para>
			
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword>3D Analysis</keyword><keyword>3D Editing</keyword><keyword>3D Features</keyword><keyword>3D Geometry</keyword><keyword>3D Spatial Relationships</keyword><keyword>Line Of Sight</keyword><keyword>Multipatch</keyword><keyword>Skyline Analysis</keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name=" Skyline " displayname=" Skyline  (3D Analyst)" toolboxalias="3d" softwarerestriction="none"><summary>
			<para> Generates a line or multipatch feature class containing the results from a skyline silhouette analysis. The analysis is conducted from observer points above a functional or virtual surface and will also consider features that are encountered during the analysis.  When used in conjunction with other tools, especially the Skyline Barrier tool, shadow volumes and other such features can be created.</para>
			
		</summary><alink_name> Skyline _3d</alink_name><parameters><param sync="true" name="in_observer_point_features" displayname="Input Observer Point Features" datatype="Features" direction="Input" expression="in_observer_point_features" type="Required"><pythonReference>
						<para>The 3D points representing observers; a separate skyline is generated for each. </para>
					</pythonReference><dialogReference>
						<para>The 3D points representing observers; a separate skyline is generated for each. </para>
					</dialogReference></param><param sync="true" name="out_feature_class" displayname="Output Skyline Feature Class" datatype="Feature Class" direction="Output" expression="out_feature_class" type="Required"><pythonReference>
						<para> The line feature class into which the skyline(s) will be placed.   Alternatively, this could be a multipatch feature class to contain feature silhouettes.</para>
					</pythonReference><dialogReference>
						<para> The line feature class into which the skyline(s) will be placed.   Alternatively, this could be a multipatch feature class to contain feature silhouettes.</para>
					</dialogReference></param><param sync="true" name="in_surface" displayname="Input Surface" datatype="Functional Surface" direction="Input" expression="in_surface" type="Optional"><pythonReference>
						<para> The functional surface for determining the horizon.</para>
					</pythonReference><dialogReference>
						<para> The functional surface for determining the horizon.</para>
					</dialogReference></param><param sync="true" name="virtual_surface_radius" displayname="Virtual Surface Radius" datatype="Linear Unit" direction="Input" expression="virtual_surface_radius" type="Optional"><pythonReference>
						<para> The radius of the virtual surface for defining the horizon in lieu of an actual surface. Must be a positive value. Ignored if an actual surface is provided. The default is 1000.</para>
					</pythonReference><dialogReference>
						<para> The radius of the virtual surface for defining the horizon in lieu of an actual surface. Must be a positive value. Ignored if an actual surface is provided. The default is 1000.</para>
					</dialogReference></param><param sync="true" name="virtual_surface_elevation" displayname="Virtual Surface Elevation" datatype="Linear Unit" direction="Input" expression="virtual_surface_elevation" type="Optional"><pythonReference>
						<para>The elevation of the virtual surface for defining the horizon in lieu of an actual surface. Ignored if an actual surface is provided. The default is 0. </para>
					</pythonReference><dialogReference>
						<para>The elevation of the virtual surface for defining the horizon in lieu of an actual surface. Ignored if an actual surface is provided. The default is 0. </para>
					</dialogReference></param><param sync="true" name="in_features" displayname="Input Features" datatype="Feature Layer" direction="Input" expression="in_features" type="Optional"><pythonReference>
						<para>The feature class to use in the skyline analysis. The features typically represent obstructions such as city buildings.</para>
					</pythonReference><dialogReference>
						<para>The feature class to use in the skyline analysis. The features typically represent obstructions such as city buildings.</para>
					</dialogReference></param><param sync="true" name="feature_lod" displayname="Feature Level of Detail" datatype="String" direction="Input" expression="feature_lod" type="Optional"><pythonReference>
						<para> The level of detail at which each feature should be examined in the skyline analysis.</para>
						<bulletList><bullet_item>FULL_DETAIL—Every edge within the feature is considered in the skyline analysis (only edges of triangles and exterior rings are considered). This is the slowest but most precise. This is the default.</bullet_item><bullet_item>CONVEX_FOOTPRINT—The contribution to the skyline analysis is generated by the upper perimeter of the convex polygon representing the convex hull of the footprint of the feature, raised to the elevation of the highest vertex within the feature. </bullet_item><bullet_item>ENVELOPE— The contribution to the skyline analysis is generated by the upper horizontal rectangular perimeter of the rectangular solid enveloping the feature (vertical faces perpendicular to the X and Y axes).</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para> The level of detail at which each feature should be examined in the skyline analysis.</para>
						<bulletList>
							<bullet_item> FULL_DETAIL - Every edge within the feature is considered in the skyline analysis (only edges of triangles and exterior rings are considered). This is the slowest but most precise. This is the default.</bullet_item>
							<bullet_item> CONVEX_FOOTPRINT - The contribution to the skyline analysis is generated by the upper perimeter of the convex polygon representing the convex hull of the footprint of the feature, raised to the elevation of the highest vertex within the feature.</bullet_item><bullet_item>  ENVELOPE - The contribution to the skyline analysis is generated by the upper horizontal rectangular perimeter of the rectangular solid enveloping the feature (vertical faces perpendicular to the X and Y axes).</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="from_azimuth_value_or_field" displayname="From Azimuth" datatype="Linear Unit; Field" direction="Input" expression="from_azimuth_value_or_field" type="Optional"><pythonReference>
						<para> The azimuth, in degrees, from which the skyline analysis should be started. The analysis starts from the observer point and goes to the right, from the From Azimuth until the To Azimuth is reached. Must be greater than minus 360 and less than 360. The default is 0.</para>
					</pythonReference><dialogReference>
						<para> The azimuth, in degrees, from which the skyline analysis should be started. The analysis starts from the observer point and goes to the right, from the From Azimuth until the To Azimuth is reached. Must be greater than minus 360 and less than 360. The default is 0.</para>
					</dialogReference></param><param sync="true" name="to_azimuth_value_or_field" displayname="To Azimuth" datatype="Linear Unit; Field" direction="Input" expression="to_azimuth_value_or_field" type="Optional"><pythonReference>
						<para> The direction, in degrees, at which the skyline analysis should be completed. The analysis starts from the observer point and goes to the right, from the From Azimuth until the To Azimuth is reached. Must be no more than 360 greater than the From Azimuth. The default is 360.</para>
					</pythonReference><dialogReference>
						<para> The direction, in degrees, at which the skyline analysis should be completed. The analysis starts from the observer point and goes to the right, from the From Azimuth until the To Azimuth is reached. Must be no more than 360 greater than the From Azimuth. The default is 360.</para>
					</dialogReference></param><param sync="true" name="azimuth_increment_value_or_field" displayname="Azimuth Increment" datatype="Linear Unit; Field" direction="Input" expression="azimuth_increment_value_or_field" type="Optional"><pythonReference>
						<para>The angular interval, in degrees, at which the horizon should be evaluated while conducting the skyline analysis between the From Azimuth and the To Azimuth. Must be no greater than the To Azimuth minus the From Azimuth. The default is 1.</para>
					</pythonReference><dialogReference>
						<para>The angular interval, in degrees, at which the horizon should be evaluated while conducting the skyline analysis between the From Azimuth and the To Azimuth. Must be no greater than the To Azimuth minus the From Azimuth. The default is 1.</para>
					</dialogReference></param><param sync="true" name="max_horizon_radius" displayname="Maximum Horizon Radius" datatype="Double" direction="Input" expression="max_horizon_radius" type="Optional"><pythonReference>
						<para>The maximum distance for which a horizon should be sought from the observer location. A value of zero indicates that there should be no limit imposed.  The default is 0.</para>
					</pythonReference><dialogReference>
						<para>The maximum distance for which a horizon should be sought from the observer location. A value of zero indicates that there should be no limit imposed.  The default is 0.</para>
					</dialogReference></param><param sync="true" name="segment_skyline" displayname="Segment Skyline" datatype="Boolean" direction="Input" expression="segment_skyline" type="Optional"><pythonReference>
						<para>Instead of one only one line being generated to represent the skyline from each observer point, the output is split into multiple lines. Each of these lines represents a different feature, or a stretch of horizon between features.   If silhouettes are being generated, then this parameter will indicate whether divergent rays should be used; for sun shadows this should generally be no or unchecked.</para>
						<bulletList><bullet_item>NO_SEGMENT_SKYLINE—The output 3D polyline results will not be segmented. This is the default.</bullet_item><bullet_item>SEGMENT_SKYLINE—The output line results will be segmented according to the various features which are encountered during the analysis.</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Instead of one only one line being generated to represent the skyline from each observer point, the output is split into multiple lines. Each of these lines represents a different feature, or a stretch of horizon between features.  If silhouettes are being generated, then this parameter will indicate whether divergent rays should be used; for sun shadows this should generally be no or unchecked.</para>
						<bulletList>
							<bullet_item>Unchecked—The output 3D polyline results will not be segmented. This is the default.</bullet_item>
							<bullet_item>Checked—The output line results will be segmented according to the various features which are encountered during the analysis.</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="scale_to_percent" displayname="Scale To Percent" datatype="Double" direction="Input" expression="scale_to_percent" type="Optional"><pythonReference>
						<para>Indicates to what percent of the original vertical angle (angle above the horizon, or angle of elevation) or elevation each skyline vertex should be placed. If either 0 or 100 is entered then no scaling will occur. The default is 100. </para>
					</pythonReference><dialogReference>
						<para>Indicates to what percent of the original vertical angle (angle above the horizon, or angle of elevation) or elevation each skyline vertex should be placed. If either 0 or 100 is entered then no scaling will occur. The default is 100. </para>
					</dialogReference></param><param sync="true" name="scale_according_to" displayname="Scale According To" datatype="String" direction="Input" expression="scale_according_to" type="Optional"><pythonReference>
						<para>The values according to which the scaling should be determined.</para>
						<bulletList><bullet_item>VERTICAL_ANGLE—Scaling is done by considering the vertical angle of each vertex relative to the observer point. This is the default.</bullet_item><bullet_item>ELEVATION—Scaling is done by considering the elevation of each vertex relative to the observer point.</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>The values according to which the scaling should be determined.</para>
						<bulletList>
							<bullet_item> VERTICAL_ANGLE - Scaling is done by considering the vertical angle of each vertex relative to the observer point. This is the default.</bullet_item><bullet_item>ELEVATION - Scaling is done by considering the elevation of each vertex relative to the observer point.</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="scale_method" displayname="Scale Method" datatype="String" direction="Input" expression="scale_method" type="Optional"><pythonReference>
						<para> The vertex to be used to calculate against.</para>
						<bulletList><bullet_item>SKYLINE_MAXIMUM—Vertices will be scaled relative to the vertical angle (or the elevation) of the vertex with the highest vertical angle (or elevation). This is the default.</bullet_item><bullet_item>EACH_VERTEX—Vertices will be scaled relative to the original vertical angle (or elevation) of each vertex.</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para> The vertex to be used to calculate against.</para>
						<bulletList>
							<bullet_item>SKYLINE_MAXIMUM—Vertices will be scaled relative to the vertical angle (or the elevation) of the vertex with the highest vertical angle (or elevation). This is the default.</bullet_item>
							<bullet_item>EACH_VERTEX—Vertices will be scaled relative to the original vertical angle (or elevation) of each vertex.</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="use_curvature" displayname="Use Curvature" datatype="String" direction="Input" expression="use_curvature" type="Optional"><pythonReference>
						<para>Indicates whether the earth's curvature should be taken into consideration when generating the ridgeline from a functional surface.</para>
						<bulletList><bullet_item>CURVATURE—The earth's curvature will be taken into consideration.</bullet_item><bullet_item>NO_CURVATURE—The earth's curvature will not be taken into consideration. This is the default.</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Indicates whether the earth's curvature should be taken into consideration when generating the ridgeline from a functional surface.</para>
						<bulletList>
							<bullet_item>Unchecked—The earth's curvature will not be taken into consideration. This is the default.</bullet_item>
							<bullet_item>Checked—The earth's curvature will be taken into consideration.</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="use_refraction" displayname="Use Refraction" datatype="String" direction="Input" expression="use_refraction" type="Optional"><pythonReference>
						<para>Indicates whether atmospheric refraction should be taken into consideration when generating the ridgeline from a functional surface.  If no actual surface is specified, then checking this check box (or passing "REFRACTION" in Python) will cause silhouettes to be created instead of skylines.</para>
						<bulletList><bullet_item>NO_REFRACTION— Atmospheric refraction will not be taken into consideration. This is the default.</bullet_item><bullet_item>REFRACTION—Atmospheric refraction will be taken into consideration.</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Indicates whether atmospheric refraction should be taken into consideration when generating the ridgeline from a functional surface.  If no actual surface is specified, then checking this check box (or passing "REFRACTION" in Python) will cause silhouettes to be created instead of skylines.</para>
						<bulletList>
							<bullet_item>Unchecked—Atmospheric refraction will not be taken into consideration. This is the default.</bullet_item>
							<bullet_item>Checked—Atmospheric refraction will be taken into consideration.</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="refraction_factor" displayname="Refraction Factor" datatype="Double" direction="Input" expression="refraction_factor" type="Optional"><pythonReference>
						<para>If atmospheric refraction is considered, then apply a scalar value. The default is 0.13.</para>
					</pythonReference><dialogReference>
						<para>If atmospheric refraction is considered, then apply a scalar value. The default is 0.13.</para>
					</dialogReference></param><param sync="true" name="pyramid_level_resolution" displayname="Pyramid Level Resolution" datatype="Double" direction="Input" expression="pyramid_level_resolution" type="Optional"><pythonReference>
						<para>If a terrain is specified for a functional surface, then this parameter is populated with the resolutions resident in the terrain. One of the resolutions may be chosen for the purpose of generating the horizon line. The default is 0, full resolution. </para>
					</pythonReference><dialogReference>
						<para>If a terrain is specified for a functional surface, then this parameter is populated with the resolutions resident in the terrain. One of the resolutions may be chosen for the purpose of generating the horizon line. The default is 0, full resolution. </para>
					</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Current_workspace" label="Current workspace">
						
					</environment><environment name="Scratch_workspace" label="Scratch workspace">
						
					</environment><environment name="XY_resolution" label="XY resolution">
						
					</environment><environment name="XY_tolerance" label="XY tolerance">
						
					</environment><environment name="Z_resolution" label="Z resolution">
						
					</environment><environment name="Z_tolerance" label="Z tolerance">
						
					</environment></environments><usage><bullet_item><para>The Skyline  tool is often used in conjunction with the Skyline Barrier  tool, and sometimes with the Skyline Graph tool. Other applications of the Skyline  tool are described  in .</para></bullet_item><bullet_item><para> The Skyline  tool can be used to create silhouettes of features, and these silhouettes can be extruded into shadow volumes with the Skyline Barrier  tool. See further information in .</para></bullet_item><bullet_item><para> If feature silhouettes are generated instead of a skyline, then the usage and description of some of the parameters will be different.</para></bullet_item><bullet_item><para>If no features are specified, then the skyline will consist
solely of a ridgeline (horizon line).


</para>
			</bullet_item><bullet_item><para>If no functional surface is specified, then a virtual surface
will be used, generated from the radius and elevation provided.</para>
			</bullet_item><bullet_item>
				<para>The only required parameters are the input observer points and
the output feature class (the skyline).

</para></bullet_item><bullet_item>
				<para>If one or more features is selected, then only the selected
features will be considered; otherwise, they are all
considered.

</para></bullet_item><bullet_item><para>A separate skyline analysis is done for each observer point.
One or more lines is generated to represent the skyline as seen
from each observer point.
</para>
			</bullet_item><bullet_item><para>The azimuth increment value affects only the granularity of
any ridgeline portion of the skyline, not the portion of the
skyline that runs along any features.


</para>
			</bullet_item><bullet_item><para>Each output line has a value indicating the FID of the
observer point feature used to create the skyline that the line
represents.
</para>
			</bullet_item><bullet_item><para> To create a shadow volume of one or more features, it is usually recommended to check the Segment Skyline checkbox so that each feature which participates in the skyline will have its own polyline.</para></bullet_item><bullet_item><para> When creating a shadow volume, you would usually run the Skyline  tool with only one feature selected per run, then run the  Skyline Barrier tool on the specific polyline which represents the feature.</para></bullet_item><bullet_item><para>The output geometry is a 3D polyline.</para></bullet_item><bullet_item><para>The following fields will be added to the output feature class
which contains the skylines:</para><bulletList><bullet_item>OID: The FID of the skyline.</bullet_item><bullet_item>Shape: The geometry of the skyline.</bullet_item><bullet_item>OBSV_PT_ID: The FID of the observer point used to create this
skyline.</bullet_item><bullet_item> ORIGFTR_ID: FID of the feature, such as a building.
</bullet_item></bulletList></bullet_item><bullet_item><para> The following fields will be added to the output feature class which contains the silhouettes:</para><bulletList><bullet_item>FID: The feature ID of the silhouette.</bullet_item><bullet_item> Shape: The geometry of the silhouette.</bullet_item><bullet_item>OBSV_PT_ID: The FID of the observer point used to create this silhouette.</bullet_item><bullet_item>   ORIGFTR_ID: The FID of the original feature, such as a building, represented by this silhouette.</bullet_item><bullet_item>DIR_VECT_X: The X component of the unit vector representing the direction of the light rays from the observer.</bullet_item><bullet_item> DIR_VECT_Y: The Y component of the unit vector representing the direction of the light rays from the observer.</bullet_item><bullet_item>DIR_VECT_Z: The Z component of the unit vector representing the direction of the light rays from the observer.</bullet_item><bullet_item>FEAT_CTR_X: The X component of the center of the envelope of the original feature (e.g. building).</bullet_item><bullet_item>FEAT_CTR_Y: The Y component of the center of the envelope of the feature.</bullet_item><bullet_item> FEAT_CTR_Z: The Z component of the center of the envelope of the feature.</bullet_item><bullet_item> BHND_CTR_X: The X component of the center of the envelope of the feature, moved to behind the feature.</bullet_item><bullet_item> BHND_CTR_Y: The Y component of the center of the envelope of the feature, moved to behind the feature.</bullet_item><bullet_item>BHND_CTR_Z: The Z component of the center of the envelope of the feature, moved to behind the feature.</bullet_item><bullet_item> USED_PARLL: Whether the silhouette was created using parallel light rays (1 for yes, 0 for no).</bullet_item><bullet_item> MADE_VERT: Whether the silhouette was made vertical, rather than perpendicular to the light rays (1 for yes, 0 for no).</bullet_item><bullet_item> MOVED_BHND: Whether the silhouette was moved to behind the feature, rather than staying at its center (1 for yes, 0 for no).</bullet_item></bulletList></bullet_item></usage><scriptExamples><scriptExample><title>Skyline Example 1 (Python window)</title><para>The following Python Window script demonstrates how to use the Skyline
function in immediate mode.</para>
				<code xml:space="preserve">import arcpy
from arcpy import env

arcpy.CheckOutExtension("3D")
env.workspace = "C:/data"
arcpy.Skyline_3d("observers.shp", "skyline_output.shp", "sample.gdb/featuredataset/terrain")
                    </code></scriptExample><scriptExample><title>Skyline Example 2 (stand-alone script)</title>
					<para>The following Python script demonstrates how to use the Skyline
function in a stand-alone script.
</para><code xml:space="preserve"># Name: Skyline Example
# Description: The following stand-alone script demonstrates how to use the 
#              Skyline tool.
# Requirements: 3D Analyst extension
# Author: ESRI

# Import system modules
import arcpy
from arcpy import env

# Obtain a license for the 3D Analyst extension
arcpy.CheckOutExtension("3D")

# Set environment settings
env.workspace = "C:/data"

# Set Local Variables
inPts = "observers.shp"
# Make sure output has a unique name
outFC = arcpy.CreateUniqueName("skyline_output.shp")
inSurface = "sample.gdb/featuredataset/terrain"
obstructionFCs = "buildings.shp; billboards.shp"
surfRad = "1000 meters"
surfElev = "100 meters"
LOD = "FULL_DETAIL"
fromAzim = 0
toAzim = 360
incAzim = 1
maxHorizRad = 0
segSky = "SEGMENT_SKYLINE"
scale = 100
scaleAcc = "ELEVATION"
scaleMethod = "SKYLINE_MAXIMUM"

# Execute Skyline
arcpy.Skyline_3d(inPts, outFC, inSurface, surfRad, surfElev, obstructionFCs, 
                 LOD, fromAzim, toAzim, incAzim, maxHorizRad, segSky, scale, 
                 scaleAcc, scaleMethod)
                    </code></scriptExample></scriptExamples></tool></metadata>