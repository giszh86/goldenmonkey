<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true">Slice (3D Analyst)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para>Slices or reclassifies the range of values of the input cells into zones of equal interval, equal area, or by natural breaks.</para>
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword>Areas</keyword><keyword>Breaks</keyword><keyword>Common Scale</keyword><keyword>Equal</keyword><keyword>Group</keyword><keyword>Interval</keyword><keyword>Ranges</keyword><keyword>Reclass</keyword><keyword>Reclassification</keyword><keyword>Reclassify</keyword><keyword>Zones</keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name="Slice" displayname="Slice (3D Analyst)" toolboxalias="3d" softwarerestriction="none"><summary>
			<para>Slices or reclassifies the range of values of the input cells into zones of equal interval, equal area, or by natural breaks.</para>
		</summary><alink_name>Slice_3d</alink_name><parameters><param sync="true" name="in_raster" displayname="Input raster" datatype="Raster Layer" direction="Input" expression="in_raster" type="Required"><pythonReference>
						<para>The input raster to be reclassified.</para>
					</pythonReference><dialogReference>
						<para>The input raster to be reclassified.</para>
					</dialogReference></param><param sync="true" name="out_raster" displayname="Output raster" datatype="Raster Dataset" direction="Output" expression="out_raster" type="Required"><pythonReference>
						<para>The output reclassified raster.</para><para>The output will always be of integer type.</para></pythonReference><dialogReference>
						<para>The output reclassified raster.</para><para>The output will always be of integer type.</para></dialogReference></param><param sync="true" name="number_zones" displayname="Number of output zones" datatype="Long" direction="Input" expression="number_zones" type="Required"><pythonReference><para>The number of zones  to reclassify the input raster into.</para>
						<para>When the slice method is EQUAL_AREA, the output raster will have the defined number of zones, with a similar number of cells in each.</para>
						<para>When EQUAL_INTERVAL is used, the output raster will have the defined number of zones, each containing equal value ranges on the output raster.</para>
						<para>When NATURAL_BREAKS is used, the output raster will have the defined number of zones, with the number of cells in each determined by the class breaks.</para>
					</pythonReference><dialogReference><para>The number of zones  to reclassify the input raster into.</para>
						<para>When the slice method is EQUAL_AREA, the output raster will have the defined number of zones, with a similar number of cells in each.</para>
						<para>When EQUAL_INTERVAL is used, the output raster will have the defined number of zones, each containing equal value ranges on the output raster.</para>
						<para>When NATURAL_BREAKS is used, the output raster will have the defined number of zones, with the number of cells in each determined by the class breaks.</para>
					</dialogReference></param><param sync="true" name="slice_type" displayname="Slice method" datatype="String" direction="Input" expression="slice_type" type="Optional"><pythonReference>
						<para>The manner in which to slice the values in the input raster.</para>
						<bulletList><bullet_item>EQUAL_INTERVAL — Determines the range of the input values and divides the range into the specified number of output zones. Each zone on the sliced output raster has the potential of having input cell values that have the same range from the extremes.</bullet_item><bullet_item>EQUAL_AREA — Specifies that the input values will be divided into the specified number of output zones, with each zone having a similar number of cells. Each zone will represent a similar amount of area.</bullet_item><bullet_item>NATURAL_BREAKS — Specifies that the classes will be based on natural groupings inherent in the data. Break points are identified by choosing the class breaks that best group similar values and that maximize the differences between classes. The cell values are divided into classes whose boundaries are set when there are relatively big jumps in the data values.</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>The manner in which to slice the values in the input raster.</para>
						<bulletList><bullet_item>EQUAL_INTERVAL — Determines the range of the input values and divides the range into the specified number of output zones. Each zone on the sliced output raster has the potential of having input cell values that have the same range from the extremes.</bullet_item><bullet_item>EQUAL_AREA — Specifies that the input values will be divided into the specified number of output zones, with each zone having a similar number of cells. Each zone will represent a similar amount of area.</bullet_item><bullet_item>NATURAL_BREAKS — Specifies that the classes will be based on natural groupings inherent in the data. Break points are identified by choosing the class breaks that best group similar values and that maximize the differences between classes. The cell values are divided into classes whose boundaries are set when there are relatively big jumps in the data values.</bullet_item></bulletList>
					</dialogReference></param><param sync="true" name="base_output_zone" displayname="Base zone for output" datatype="Long" direction="Input" expression="base_output_zone" type="Optional"><pythonReference>
						<para>Defines the lowest zone value on the output raster dataset.</para>
						<para>The default value is 1.</para>
					</pythonReference><dialogReference>
						<para>Defines the lowest zone value on the output raster dataset.</para>
						<para>The default value is 1.</para>
					</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Cell_size" label="Cell size">
						
					</environment><environment name="Current_workspace" label="Current workspace">
						
					</environment><environment name="Mask" label="Mask">
						
					</environment><environment name="Output_coordinate_system" label="Output coordinate system">
						
					</environment><environment name="Output_extent" label="Output extent">
						
					</environment><environment name="Scratch_workspace" label="Scratch workspace">
						
					</environment><environment name="Snap_raster" label="Snap raster">
						
					</environment></environments><usage><bullet_item>
				<para>Slice works best on data that is normally distributed. When using input raster data that is skewed the output result may not contain all of the classes that you had expected or specified.</para>
			</bullet_item><bullet_item>
				<para>If an environment  has been set, those cells that have been masked will receive NoData on the output slice raster.</para>
			</bullet_item><bullet_item>
				<para>When using the EQUAL_AREA method, sometimes not all of the output classes will have an equal, or even similar, number of cells (i.e., area). This may be an inherent result based on the nature of the input values and the specified number of classes (bins). If the results are deemed undesirable, you can try using a few number of classes or applying a statistics transformation (e.g., logarithm, square root, and so on) to the input dataset.</para>
			</bullet_item></usage><scriptExamples><scriptExample><title>Slice example 1 (Python window)</title>
					
					<para>Reclassify the input raster into five classes based on natural groupings inherent in the data.</para>
				<code xml:space="preserve">import arcpy
from arcpy import env  
env.workspace = "C:/data"
arcpy.Slice_3d("elevation", "c:/output/elevslice", 5, "NATURAL_BREAKS") 
                    </code></scriptExample><scriptExample><title>Slice example 2 (stand-alone script)</title>
					
					<para>Reclassify the input raster into ten classes based on natural groupings inherent in the data.</para>
				<code xml:space="preserve"># Name: Slice_3d_Ex_02.py
# Description: Slices a range of values of the input cells of a raster by
#    zones of equal interval or equal area.
# Requirements: 3D Analyst Extension
# Author: ESRI

# Import system modules
import arcpy
from arcpy import env

# Set environment settings
env.workspace = "C:/data"

# Set local variables
inRaster = "elevation"
outRaster = "C:/output/outslice"
numberZones = 10
baseOutputZone = 5

# Check out the ArcGIS 3D Analyst extension license
arcpy.CheckOutExtension("3D")

# Execute Slice
arcpy.Slice_3d(inRaster, outRaster, numberZones, "NATURAL_BREAKS", 
               baseOutputZone) 
                    </code></scriptExample></scriptExamples></tool></metadata>