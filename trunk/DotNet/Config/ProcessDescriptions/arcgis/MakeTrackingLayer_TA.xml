<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true">Make Tracking Layer (Tracking Analyst)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para>This tool creates a tracking layer from a feature class or layer  containing temporal data.</para>
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword></keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name="MakeTrackingLayer" displayname="Make Tracking Layer (Tracking Analyst)" toolboxalias="TA" softwarerestriction="none"><summary>
			<para>This tool creates a tracking layer from a feature class or layer  containing temporal data.</para>
		</summary><alink_name>MakeTrackingLayer_TA</alink_name><parameters><param sync="true" name="in_features" displayname="Input Features" datatype="Feature Layer" direction="Input" expression="in_features" type="Required"><pythonReference>
						<para>The input feature class or layer.</para>
					</pythonReference><dialogReference>
						<para>The input feature class or layer.</para>
					</dialogReference></param><param sync="true" name="out_layer" displayname="Output Layer" datatype="Feature Layer" direction="Output" expression="out_layer" type="Required"><pythonReference>
						<para>The name of the tracking layer to be created. The newly  created tracking layer can be used as input to any geoprocessing tool that accepts a feature layer as input.</para>
					</pythonReference><dialogReference>
						<para>The name of the tracking layer to be created. The newly  created tracking layer can be used as input to any geoprocessing tool that accepts a feature layer as input.</para>
					</dialogReference></param><param sync="true" name="time_zone" displayname="Time Zone" datatype="String" direction="Input" expression="time_zone" type="Required"><pythonReference><para>The time zone that the data in the input feature class was recorded in.   For a list of available time zones supported by your system, you can open the tool dialog box and expand this drop-down.  When you enter the time zone as a parameter, you must use a non-localized string representation of the appropriate Microsoft Time Zone ID,  and replace any spaces with underscore characters. For example, the appropriate string representation of the Pacific time zone in the United States is "Pacific_Standard_Time".  "NO_TIME_ZONE" can be used to specify no time zone for the output tracking layer.</para></pythonReference><dialogReference>
						<para> The time zone that the data in the input feature class was recorded in.  The default value (no time zone)  means that the output tracking layer will display in the same time zone as the operating system.</para>
					</dialogReference></param><param sync="true" name="adjusted_for_dst" displayname="Time field values are adjusted for Daylight Saving Time" datatype="Boolean" direction="Input" expression="adjusted_for_dst" type="Required"><pythonReference><para>If you chose a time zone for your data, this parameter specifies whether the data values in the input time field were recorded with an adjustment for Daylight Saving Time.</para><bulletList><bullet_item>ADJUSTED_FOR_DST—The data values in the input time field were recorded with an adjustment for Daylight Saving Time.</bullet_item><bullet_item>NOT_ADJUSTED_FOR_DST—The data values in the input time field were recorded without an adjustment for Daylight Saving Time.</bullet_item></bulletList></pythonReference><dialogReference>
						<para>If you chose a time zone for your data, this parameter specifies whether the data values in the input time field were recorded with an adjustment for Daylight Saving Time.</para><bulletList><bullet_item>Checked— Indicates that the data values in the input time field were recorded with an adjustment for Daylight Saving Time. This is the default.</bullet_item><bullet_item>Unchecked—Indicates that the data values in the input time field were recorded without an adjustment for Daylight Saving Time.</bullet_item></bulletList>
					</dialogReference></param><param sync="true" name="storage_policy" displayname="Storage Policy" datatype="String" direction="Input" expression="storage_policy" type="Optional"><pythonReference><para>Determines the storage policy  for the output tracking layer.</para><bulletList><bullet_item>COPY_ALL_TO_MEMORY—The output tracking layer will be stored completely in memory.</bullet_item><bullet_item>KEEP_ON_DISK—The output tracking layer will use a disk-based storage system.  This option should only be used when the input feature layer is very large.</bullet_item></bulletList></pythonReference><dialogReference><para>Determines the storage policy  for the output tracking layer.</para>
						<bulletList><bullet_item>COPY_ALL_TO_MEMORY - The output tracking layer will be stored completely in memory. This is the default.</bullet_item><bullet_item>KEEP_ON_DISK - The output tracking layer will use a disk-based storage system.  This option should only be used when the input feature class is very large. If this option is selected, then only supported time field formats can be used.</bullet_item></bulletList>
					</dialogReference></param><param sync="true" name="start_time_field" displayname="Time Field" datatype="Field" direction="Input" expression="start_time_field" type="Required"><pythonReference>
						<para>The field in the input feature class or layer that contains date and time information. This tool requires date and time information to be contained in the same field, and the data type of the field must  be  Short, Long, Float, Double, Text, or Date.</para>
					</pythonReference><dialogReference>
						<para>The field in the input feature class or layer that contains date and time information. This tool requires date and time information to be contained in the same field, and the data type of the field must  be  Short, Long, Float, Double, Text, or Date.</para>
					</dialogReference></param><param sync="true" name="time_field_format" displayname="Time Field Format" datatype="String" direction="Input" expression="time_field_format" type="Optional"><pythonReference><para> If the data type of the time field is anything other than Date, this parameter determines the format that will be used to interpret data values in the time field. Some examples of formats are:</para><bulletList><bullet_item>"yyyyMMdd" (standard format valid for Text or Numeric time fields)</bullet_item><bullet_item>"yyyy/MM/dd HH:mm:ss" (standard format valid only for Text time fields)</bullet_item><bullet_item>"MM-dd-yyyy hh:mm:ss tt" (custom format valid only for Text time fields)</bullet_item></bulletList><para>If the data type of the time field is Text, either a standard ESRI text  time format can  be used or a custom format can be specified.   However, custom formats can not be used if you specified KEEP_ON_DISK for the storage policy.  If the data type of the time field is numeric (Short, Long, Float, or Double), only standard ESRI numeric time formats can  be used.   If the data type of the time field is Date, this parameter is not needed.</para></pythonReference><dialogReference>
						<para> If the data type of the time field is anything other than Date, this parameter determines the format that will be used to interpret data values in the time field.   Either a standard ESRI time format can be selected from the drop-down list, or a custom format can be entered. If the data type of the time field is numeric (Short, Long, Float, or Double), a list of standard ESRI numeric time formats is provided in the drop-down list.  If the data type of the time field is Text, a list of standard ESRI text  time formats is provided in the drop-down list.      If the data type of the time field is Date, this parameter is not needed.</para>
					</dialogReference></param><param sync="true" name="locale_id" displayname="Locale" datatype="Long; String" direction="Input" expression="locale_id" type="Optional"><pythonReference><para>If the data type of the time field is Text, this parameter  determines which locale will be used to interpret data values in the time field.   For all  time field data types other than Text, this parameter is not needed. If no locale is entered, the current  locale of the operating system will be used.  For a list of available locales supported by your system, open the tool dialog box and expand this drop-down.  When entering the locale as a parameter, it is recommended to use only the  locale ID (LCID) assigned by Microsoft, which can be entered as a long integer such as 1033.  You can also enter the full string representation of the locale as a parameter, such as "01033-English_(United_States)", but you must replace spaces with underscore characters.</para></pythonReference><dialogReference>
						<para>
 If the data type of the time field is Text, this parameter  determines which locale will be used to interpret data values in the time field.   For all  time field data types other than Text, this parameter is not needed.  By default, this parameter is set to the current  locale of your operating system.</para>
					</dialogReference></param><param sync="true" name="am_designator" displayname="AM Designator" datatype="String" direction="Input" expression="am_designator" type="Optional"><pythonReference>
						<para>If the time field data type is Text and the time format is a 12-hour clock representation including a time marker ("t" or "tt"), then this parameter determines the character ("t") or characters ("tt") that designate AM in the time field data values. If nothing is entered, then the default AM designator for the selected locale will be used. For all  time field data types other than Text, this parameter is not needed.</para>
					</pythonReference><dialogReference>
						<para>If the time field data type is Text and the time format is a 12-hour clock representation including a time marker ("t" or "tt"), then this parameter determines the character ("t") or characters ("tt") that designate AM in the time field data values. If nothing is entered, then the default AM designator for the selected locale will be used. For all  time field data types other than Text, this parameter is not needed.</para>
					</dialogReference></param><param sync="true" name="pm_designator" displayname="PM Designator" datatype="String" direction="Input" expression="pm_designator" type="Optional"><pythonReference>
						<para>If the time field data type is Text and the time format is a 12-hour clock representation including a time marker ("t" or "tt"), then this parameter determines the character ("t") or characters ("tt") that designate PM in the time field data values. If nothing is entered, then the default PM designator for the selected locale will be used.  For all  time field data types other than Text, this parameter is not needed.</para>
					</pythonReference><dialogReference>
						<para>If the time field data type is Text and the time format is a 12-hour clock representation including a time marker ("t" or "tt"), then this parameter determines the character ("t") or characters ("tt") that designate PM in the time field data values. If nothing is entered, then the default PM designator for the selected locale will be used.  For all  time field data types other than Text, this parameter is not needed.</para>
					</dialogReference></param><param sync="true" name="track_id_field" displayname="Track ID Field" datatype="Field" direction="Input" expression="track_id_field" type="Optional"><pythonReference>
						<para>The field that contains data values that will be used to group features into  tracks in the output tracking layer.  The data type of the field can be  Short, Long, Float, Double, Text, or OID.</para>
					</pythonReference><dialogReference>
						<para>The field that contains data values that will be used to group features into  tracks in the output tracking layer.  The data type of the field can be  Short, Long, Float, Double, Text, or OID.</para>
					</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Current_workspace" label="Current workspace"></environment></environments><usage><bullet_item>
				<para>For this tool to work, the input feature class or layer must have date and time information contained in a single time field of data type text, short, long, float, double, or date. If the time field data type is date, the tool will automatically detect the format.   If the time field data type is anything other than  date, a time field format (and possibly other information for a time field data type of text) is required to parse the data values correctly.</para>
			</bullet_item><bullet_item><para>If the time field selected is text, short, long, float, or double, the time field format can be selected from a list of , or you can define a custom time field format to interpret custom date and/or time values in a text field.  For more information about custom formats for text fields, refer to .</para></bullet_item><bullet_item><para>If possible, it is recommended to use a time field of data type date with this tool.  The  geoprocessing tool can be used to create a date field in your input feature class or layer before using this tool.</para></bullet_item><bullet_item><para>If your feature class or layer contains date and time information in two separate text  fields, the  tool can be used to combine the information into a single text  field before using this tool.</para></bullet_item><bullet_item>
				<para>Specifying a track identifier field for the output tracking layer is optional.</para>
			</bullet_item><bullet_item>
				<para>This tool allows you to specify a storage policy for the output tracking layer. The default setting is to store the output tracking layer in memory, but choosing the option to store the output tracking layer on disk allows you to create tracking layers from larger data sets.  If you choose to store the output layer on disk and  your time field is a text or numeric data type, only  can be used.</para>
			</bullet_item></usage><scriptExamples><scriptExample><title>MakeTrackingLayer example using feature class with time values stored in date field</title>
					<para>This sample shows how to run the tool on the feature class whose time field is of field type date. This sample uses the Tracking Analyst tutorial data.</para>
				<code xml:space="preserve">import arcpy
arcpy.CheckOutExtension("tracking")
inputGDB = "C:/arcgis/ArcTutor/Tracking Analyst/Simple/Hurricanes.gdb/atlantic_hurricanes_2000"
timezone = "Eastern_Standard_Time"
arcpy.MakeTrackingLayer_ta( inputGDB, "Hurricanes", timezone, "ADJUSTED_FOR_DST", "COPY_ALL_TO_MEMORY", "Date_Time")

                    </code></scriptExample><scriptExample><title>MakeTrackingLayer example using shapefile with time values in a standard text format</title>
					<para>This sample shows how to run the tool on a shapefile whose time field is text containing data in a standard ESRI format.</para>
				<code xml:space="preserve">import arcpy
arcpy.CheckOutExtension("tracking")
inputShapefile = "C:/vehicles/trains.shp"
timezone = "Central_Standard_Time"
arcpy.MakeTrackingLayer_ta( inputShapefile, "trains_layer", timezone, "ADJUSTED_FOR_DST", "COPY_ALL_TO_MEMORY", "text_date", "yyyy-MM-dd HH:mm:ss")
                    </code></scriptExample><scriptExample><title>MakeTrackingLayer example using shapefile with time values stored in a custom text format</title>
					<para>This sample shows how to run the tool on a shapefile whose time field is text containing data in a custom format.  This example also specifies a Track ID field for the output tracking layer.</para>
				<code xml:space="preserve">import arcpy
arcpy.CheckOutExtension("tracking")
inputShapefile = "C:/vehicles/planes.shp"
timezone = "Central_Standard_Time"
arcpy.MakeTrackingLayer_ta( inputShapefile, "planes_layer", timezone, "ADJUSTED_FOR_DST", "COPY_ALL_TO_MEMORY", "cust_date", "MM/dd/yyyy HH:mm:ss", 1033,"AM", "PM", "EVENTID" )

                    </code></scriptExample><scriptExample><title>MakeTrackingLayer example using shapefile with time values in a standard numeric format</title>
					<para>This sample shows how to run the tool on a shapefile whose time field is a numeric type containing data in a standard ESRI format.</para>
				<code xml:space="preserve">import arcpy
arcpy.CheckOutExtension("tracking")
inputShapefile = "C:/vehicles/trains.shp"
timezone = "Central_Standard_Time"
arcpy.MakeTrackingLayer_ta( inputShapefile, "trains_layer", timezone, "ADJUSTED_FOR_DST", "COPY_ALL_TO_MEMORY", "num_date", "yyyyMMdd")
                    </code></scriptExample></scriptExamples></tool></metadata>