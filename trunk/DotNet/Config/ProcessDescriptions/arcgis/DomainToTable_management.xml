<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true">Domain to Table (Data Management)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para>Creates a table from an attribute domain.</para>
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword>Attribute</keyword><keyword>Constrain</keyword><keyword>Create</keyword><keyword>Edit</keyword><keyword>Export</keyword><keyword>Field</keyword><keyword>Import</keyword><keyword>Integrity</keyword><keyword>Limit</keyword><keyword>Restrict</keyword><keyword>Subtype</keyword><keyword>Update</keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name="DomainToTable" displayname="Domain to Table (Data Management)" toolboxalias="management" softwarerestriction="none"><summary>
			<para>Creates a table from an attribute domain.</para>
		</summary><alink_name>DomainToTable_management</alink_name><parameters><param sync="true" name="in_workspace" displayname="Input Workspace" datatype="Workspace" direction="Input" expression="in_workspace" type="Required"><pythonReference>
						<para>The workspace containing the attribute domain to be converted to a table.</para>
					</pythonReference><dialogReference>
						<para>The workspace containing the attribute domain to be converted to a table.</para>
					</dialogReference></param><param sync="true" name="domain_name" displayname="Domain Name" datatype="String" direction="Input" expression="domain_name" type="Required"><pythonReference>
						<para>The name of the existing attribute domain.</para>
					</pythonReference><dialogReference>
						<para>The name of the existing attribute domain.</para>
					</dialogReference></param><param sync="true" name="out_table" displayname="Output Table" datatype="Table" direction="Output" expression="out_table" type="Required"><pythonReference>
						<para>The table to be created.</para>
					</pythonReference><dialogReference>
						<para>The table to be created.</para>
					</dialogReference></param><param sync="true" name="code_field" displayname="Code Field" datatype="String" direction="Input" expression="code_field" type="Required"><pythonReference>
						<para>The name of the field in the created table that will store code values.</para>
					</pythonReference><dialogReference>
						<para>The name of the field in the created table that will store code values.</para>
					</dialogReference></param><param sync="true" name="description_field" displayname="Field Description" datatype="String" direction="Input" expression="description_field" type="Required"><pythonReference>
						<para>The name of the field in the created table that will store code value descriptions.</para>
					</pythonReference><dialogReference>
						<para>The name of the field in the created table that will store code value descriptions.</para>
					</dialogReference></param><param sync="true" name="configuration_keyword" displayname="Configuration Keyword" datatype="String" direction="Input" expression="configuration_keyword" type="Optional"><pythonReference>
						<para>For SDE tables, the custom storage keywords for creating the table.</para>
					</pythonReference><dialogReference>
						<para>For SDE tables, the custom storage keywords for creating the table.</para>
					</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Output_Config_Keyword" label="Output Config Keyword">
						
					</environment><environment name="Current_workspace" label="Current workspace">
						
					</environment><environment name="Scratch_workspace" label="Scratch workspace">
						
					</environment><environment name="Auto_commit" label="Auto commit">
						
					</environment></environments><usage><bullet_item>
				<para>Creating a table from an attribute domain allows for additional editing of the table in ArcMap. For example, a table could be created from a coded value domain, additional code values could be added to the coded value list, and the  tool could be used to update the original domain.</para>
			</bullet_item><bullet_item>
				<para>Workspace domains can also be managed in ArcCatalog or the Catalog window. Domains can be created and modified through the Domains tab on the Database Properties dialog box.</para>
			</bullet_item></usage><scriptExamples><scriptExample><title>Domain to Table Example (Python Window)</title>
					<para>The following Python window script demonstrates how to use the DomainToTable function.</para>
				<code xml:space="preserve">import arcpy
from arcpy import env
env.workspace = "C:/data"
arcpy.DomainToTable_management("montgomery.gdb", "DistDiam", "diameters", "code", "descript")
                    </code></scriptExample><scriptExample><title>Domain to Table Example 2 (Stand-alone Script)</title>
					<para>This stand-alone script uses the DomainToTable function as part of a workflow to edit a domain.</para>
				<code xml:space="preserve"># Name: RemoveDomainsExample.py
# Purpose: Update an attribute domain to constrain valid pipe material values
# Author: ESRI

# Import system modules
import arcpy, os
from arcpy import env
 
try:
    # Set the workspace (to avoid having to type in the full path to the data every time)
    env.workspace = "data"
 
    # set local parameters
    inFeatures = "Montgomery.gdb/Water/DistribMains"
    inField = "MATERIAL"
    dWorkspace = "Montgomery.gdb"
    domName = "Material"
    codedValue =  "ACP: Asbestos concrete"
    codeField = "TYPE"
    fieldDesc= "DESRIPT"
    # Process: Remove the constraint from the material field
    arcpy.RemoveDomainFromField_management(inFeatures, inField)
 
    # Edit the domain values
    # Process: Remove a coded value from the domain
    arcpy.DeleteCodedValueFromDomain_management(dWorkspace, domName, codedValue)
 
    # Process: Create a table from the domain to edit it with ArcMap editing tools
    arcpy.DomainToTable_management(dWorkspace, domname, dWorkspace + os.sep + domname , codeField, fieldDesc)
 
    # Process: Delete the domain
    arcpy.DeleteDomain_management(dWorkspace, domName)
 
    # Edit the domain table outside of geoprocessing
    # and then bring the domain back in with the TableToDomain process
 
except Exception, e:
    # If an error occurred, print line number and error message
    import traceback, sys
    tb = sys.exc_info()[2]
    print "Line %i" % tb.tb_lineno
    print e.message
                    </code></scriptExample></scriptExamples></tool></metadata>