<?xml version="1.0"?><metadata><Esri><MetaID SYNC="true" /><CreaDate SYNC="true" /><CreaTime SYNC="true" /><SyncOnce SYNC="true">TRUE</SyncOnce><ModDate SYNC="true" /><ModTime SYNC="true" /></Esri><dataIdInfo><idCitation><resTitle sync="true">Create Random Points (Data Management)</resTitle><citRespParty><rpIndName /><rpOrgName>ESRI, Inc.</rpOrgName><rpPosName /><rpCntInfo><cntAddress><delPoint>380 New York Street</delPoint><city>Redlands</city><adminArea>California</adminArea><postCode>92373 - 8100</postCode><eMailAdd>info@esri.com</eMailAdd><country>United States</country></cntAddress><cntPhone><voiceNum>909-793-2853</voiceNum><faxNum>909-793-5953</faxNum></cntPhone></rpCntInfo><role><RoleCd>010</RoleCd></role></citRespParty></idCitation><idAbs>
			<para>Creates a specified number of random point features. Random points can be generated in an extent window, inside polygon features, on point features, or along line features. </para>
			
		</idAbs><descKeys KeyTypCd="005"><keyTyp><keyTyp>005</keyTyp></keyTyp><keyword>Bounding</keyword><keyword>Box</keyword><keyword>Constrain</keyword><keyword>Dispersed</keyword><keyword>Distribution</keyword><keyword>Extent</keyword><keyword>Generate</keyword><keyword>Sample</keyword></descKeys></dataIdInfo><distInfo><distributor><distorFormat><formatName sync="true">ArcToolBox Tool</formatName></distorFormat><distorTran><onLineSrc><linkage /><protocol /><onFunct><onFunctCd /></onFunct></onLineSrc></distorTran></distributor></distInfo><metainfo><metd Sync="TRUE" /></metainfo><mdDateSt Sync="TRUE" /><tool name="CreateRandomPoints" displayname="Create Random Points (Data Management)" toolboxalias="management" softwarerestriction="none"><summary>
			<para>Creates a specified number of random point features. Random points can be generated in an extent window, inside polygon features, on point features, or along line features. </para>
			
		</summary><alink_name>CreateRandomPoints_management</alink_name><parameters><param sync="true" name="out_path" displayname="Output Location" datatype="Workspace;Raster Catalog" direction="Input" expression="out_path" type="Required"><pythonReference>
						<para>The location or workspace in which the random points feature class will be created. This location or workspace must already exist.</para>
					</pythonReference><dialogReference>
						<para>The location or workspace in which the random points feature class will be created. This location or workspace must already exist.</para>
					</dialogReference></param><param sync="true" name="out_name" displayname="Output Point Feature Class" datatype="String" direction="Input" expression="out_name" type="Required"><pythonReference>
						<para>The name of the random points feature class to be created.</para>
					</pythonReference><dialogReference>
						<para>The name of the random points feature class to be created.</para>
					</dialogReference></param><param sync="true" name="constraining_feature_class" displayname="Constraining Feature Class" datatype="Feature Layer" direction="Input" expression="constraining_feature_class" type="Optional"><pythonReference>
						<para>Random points will be generated inside or along the features in this feature class. The constraining feature class can be geometry type point, multipoint, line, or polygon. Points will randomly be placed inside polygon features, along line features, or at point feature locations.</para>
					</pythonReference><dialogReference>
						<para>Random points will be generated inside or along the features in this feature class. The constraining feature class can be geometry type point, multipoint, line, or polygon. Points will randomly be placed inside polygon features, along line features, or at point feature locations.</para>
					</dialogReference></param><param sync="true" name="constraining_extent" displayname="Constraining Extent" datatype="Extent" direction="Input" expression="constraining_extent" type="Optional"><pythonReference>
						<para>Random points will be generated inside the extent. The constraining extent will only be used if no constraining feature class is specified.</para>
					</pythonReference><dialogReference>
						<para>Random points will be generated inside the extent. The constraining extent will only be used if no constraining feature class is specified.</para>
					</dialogReference></param><param sync="true" name="number_of_points_or_field" displayname="Number of Points [value or field]" datatype="Field;Long" direction="Input" expression="number_of_points_or_field" type="Optional"><pythonReference>
						<para>The number of points to be randomly generated.</para>
						<para>The number of points can be specified as a long integer number or as a field from the constraining features containing numeric values for how many random points to place within each feature. The field option is only valid for polygon or line constraining features. If the number of points is supplied as a long integer number, each feature in the constraining feature class will have that number of random points generated inside or along it.</para>
					</pythonReference><dialogReference>
						<para>The number of points to be randomly generated.</para>
						<para>The number of points can be specified as a long integer number or as a field from the constraining features containing numeric values for how many random points to place within each feature. The field option is only valid for polygon or line constraining features. If the number of points is supplied as a long integer number, each feature in the constraining feature class will have that number of random points generated inside or along it.</para>
					</dialogReference></param><param sync="true" name="minimum_allowed_distance" displayname="Minimum Allowed Distance [value or field]" datatype="Field;Long" direction="Input" expression="minimum_allowed_distance" type="Optional"><pythonReference>
						<para>The shortest distance allowed between any two randomly placed points. If a value of "1 Meter" is specified, all random points will be farther than 1 meter away from the closest point.</para>
					</pythonReference><dialogReference>
						<para>The shortest distance allowed between any two randomly placed points. If a value of "1 Meter" is specified, all random points will be farther than 1 meter away from the closest point.</para>
					</dialogReference></param><param sync="true" name="create_multipoint_output" displayname="Create Multipoint Output" datatype="Boolean" direction="Input" expression="create_multipoint_output" type="Optional"><pythonReference>
						<para>Determines if the output feature class will be a multipart or single part feature.</para>
						<bulletList><bullet_item>POINT—The output will be geometry type point (each point is a separate feature). This is the default.</bullet_item><bullet_item>MULTIPOINT—The output will be geometry type multipoint (all points are a single feature).</bullet_item></bulletList>
					</pythonReference><dialogReference>
						<para>Determines if the output feature class will be a multipart or single part feature.</para>
						<bulletList>
							<bullet_item>Unchecked—The output will be geometry type point (each point is a separate feature). This is the default.</bullet_item>
							<bullet_item>Checked—The output will be geometry type multipoint (all points are a single feature).</bullet_item>
						</bulletList>
					</dialogReference></param><param sync="true" name="multipoint_size" displayname="Maximum Number of Points per Multipoint" datatype="Long" direction="Input" expression="multipoint_size" type="Optional"><pythonReference>
						<para>If the Create Multipoint Output option is used (checked/MULTIPOINT), this parameter specifies the number of random points to be placed in each multipoint geometry.</para>
					</pythonReference><dialogReference>
						<para>If the Create Multipoint Output option is used (checked/MULTIPOINT), this parameter specifies the number of random points to be placed in each multipoint geometry.</para>
					</dialogReference></param></parameters><returnvalues></returnvalues><environments><environment name="Default_output_Z_value" label="Default output Z value">
						
					</environment><environment name="M_resolution" label="M resolution">
						
					</environment><environment name="M_tolerance" label="M tolerance">
						
					</environment><environment name="Output_M_domain" label="Output M domain">
						
					</environment><environment name="Output_XY_domain" label="Output XY domain">
						
					</environment><environment name="Output_Z_domain" label="Output Z domain">
						
					</environment><environment name="Output_coordinate_system" label="Output coordinate system">
						
					</environment><environment name="Current_workspace" label="Current workspace">
						
					</environment><environment name="Geograpic_transformations" label="Geograpic transformations">
						
					</environment><environment name="Scratch_workspace" label="Scratch workspace">
						
					</environment><environment name="Output_has_M_values" label="Output has M values">
						
					</environment><environment name="Output_has_Z_values" label="Output has Z values">
						
					</environment><environment name="Output_spatial_grid_1_2_3" label="Output spatial grid 1 2 3">
						
					</environment><environment name="XY_resolution" label="XY resolution">
						
					</environment><environment name="XY_tolerance" label="XY tolerance">
						
					</environment><environment name="Z_resolution" label="Z resolution">
						
					</environment><environment name="Z_tolerance" label="Z tolerance">
						
					</environment><environment name="Random_number_generator" label="Random number generator">
						
					</environment></environments><usage><bullet_item>
				<para>The area in which random points will be generated can be defined either by constraining polygon, point, or line features or by a constraining extent window.</para>
			</bullet_item><bullet_item>
				<para>The Number of Points parameter can be specified as a  number or as a numeric field in the Constraining Feature Class  containing values for how many random points to place within each feature. The field option is only valid for polygon or line constraining features. If the number of points is supplied as a number, each feature in the constraining feature class will have that number of random points generated inside or along it.</para>
			</bullet_item><bullet_item>
				<para>To assign random values to randomly placed points, first generate random points using the this tool. Second, use the  tool to create a new numeric field in the random points feature class. Suggested field types are long integer or float. Third, use the  tool to assign random values to the empty field in the random points feature class. To generate a random integer between a and b (inclusive), use the Python expression random.randint(a,b). To generate a random float number between a and b (exclusive), use the  Python expression random.uniform(a,b). Do not forget to set Expression Type to PYTHON, replace the a and b values, and import the random module in the Code Block section using the expression import random.</para>
			</bullet_item><bullet_item>
				<para>The Constraining Extent parameter can be entered as a set of minimum and maximum x- and y-coordinates or as equal to the extent of a feature layer or feature class.</para>
			</bullet_item><bullet_item>
				<para>If values for both Constraining Feature Class and Constraining Extent are specified, the Constraining Feature Class value will be used and the Constraining Extent value will be ignored.</para>
			</bullet_item><bullet_item>
				<para>In the tool dialog box, the Constraining Extent values can be reset using the Clear button.</para>
			</bullet_item><bullet_item>
				<para>When unable to place any more random points within a constraining area without breaking the minimum allowed distance specification, the number of random points in the constraining area will be reduced to the maximum possible under the minimum allowed distance.</para>
			</bullet_item><bullet_item>
				<para>The Minimum Allowed Distance parameter can be specified as a linear unit or a field from the constraining features containing numeric values. This value will determine the minimum allowed distance between random points within each input feature. The field option is only valid for polygon or line constraining features. Random points may be within the minimum allowed distance if they were generated inside or along different constraining features.</para>
			</bullet_item><bullet_item>
				<para>Using point features as the constraining feature class creates a random subset of the constraining point features. No new point locations are generated.</para>
			</bullet_item><bullet_item>
				<para>Noninteger (whole) positive values for the Number of Points and Minimum Allowed Distance parameters will be rounded to the nearest whole number. Nonnumeric and negative values are set to 0.</para>
			</bullet_item></usage><scriptExamples><scriptExample><title>Create Random Points Example (Python Window)</title>
					<para>The following Python window script demonstrates how to use the Create Random Points tool in immediate mode:</para>
				<code xml:space="preserve">import arcpy
arcpy.CreateRandomPoints_management("c:/data/project", "samplepoints", "c:/data/studyarea.shp", "", 500, "", "POINT", "")
                    </code></scriptExample><scriptExample><title>Create Random Points with Random Values Example (Stand-alone Python script)</title>
					<para>The following stand-alone Python script demonstrates how to create random points with random values:</para>
				<code xml:space="preserve">#Name: RandomPointsRandomValues.py
#Purpose: create random points with random values
#Author: ESRI

# Import system modules
import arcpy, os, random
from arcpy import env

# Create random points in the features of a constraining feature class
# Number of points for each feature determined by the value in the field specified
outGDB = "C:/data/county.gdb"
outName = "randpeople"
conFC = "C:/data/county.gdb/blocks"
numField = "POP2000"
arcpy.CreateRandomPoints_management(outGDB, outName, conFC, "", numField)

# set workspace
env.workspace = "C:/data/county.gdb"

# Create fields for random values
fieldInt = "fieldInt"
fieldFlt = "fieldFlt"
arcpy.AddField_management(outName, fieldInt, "LONG") # add long integer field
arcpy.AddField_management(outName, fieldFlt, "FLOAT") # add float field

# Calculate random values between 1-100 in the new fields
arcpy.CalculateField_management(outName, fieldInt, "random.randint(1,100)","PYTHON","import random")
arcpy.CalculateField_management(outName, fieldFlt, "random.uniform(1,100)","PYTHON","import random")

                    </code></scriptExample><scriptExample><title>Create Random Points Example (Stand-alone Python script)</title>
					<para>The following stand-alone Python script demonstrates several methods to use the Create Random Points tool:</para>
				<code xml:space="preserve">#Name: RandomPoints.py
#Purpose: create several types of random points feature classes
#Author: ESRI

# Import system modules
import arcpy, os
from arcpy import env

#set environment settings
env.overWriteOutput = True

# Create random points in an extent defined simply by numbers
outFolder = "C:/data"
numExtent = "0 0 1000 1000"
numPoints = 100
outName = "myRandPnts.shp"
env.outputCoordinateSystem = "Coordinate Systems/Projected Coordinate Systems/World/Miller Cylindrical (world).prj"
arcpy.CreateRandomPoints_management(outFolder, outName, "", numExtent, numPoints)
env.outputCoordinateSystem = ""
 
# Create random points in an extent defined by another feature class
outName = "testpoints.shp"
fcExtent = "C:/data/studyarea.shp"
arcpy.CreateRandomPoints_management(outFolder, outName, "", fcExtent, numPoints)
 
# Create random points in the features of a constraining feature class
# Number of points for each feature determined by the value in the field specified
outGDB = "C:/data/county.gdb"
outName = "randpeople"
conFC = "C:/data/county.gdb/blocks"
numField = "POP2000"
arcpy.CreateRandomPoints_management(outGDB, outName, conFC, "", numField)

#create random points in the features of a constraining 
#feature class with a minimum allowed distance
outName = "constparcelpnts"
conFC = "C:/data/county.gdb/parcels"
numPoints = 10
minDistance = "5 Feet"
arcpy.CreateRandomPoints_management(outGDB, outName, conFC, "", numPoints, minDistance) 

#Creat random points with a multipoint output
outName = "randomMPs"
fcExtent = "C:/data/county.gdb/county"
numPoints = 100
numMP = 10
arcpy.CreateRandomPoints_management(outGDB, outName, "", fcExtent, numPoints, "", "MULTIPOINT", numMP)
                    </code></scriptExample></scriptExamples></tool></metadata>